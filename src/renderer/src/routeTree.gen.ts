/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as UserProfileRouteImport } from './routes/user/profile'
import { Route as ProjectsCreateRouteImport } from './routes/projects/create'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId'
import { Route as ProjectsProjectIdIndexRouteImport } from './routes/projects/$projectId/index'
import { Route as ProjectsProjectIdSettingsRouteImport } from './routes/projects/$projectId/settings'
import { Route as ProjectsProjectIdHistoryRouteImport } from './routes/projects/$projectId/history'
import { Route as ProjectsProjectIdDashboardRouteImport } from './routes/projects/$projectId/dashboard'
import { Route as ProjectsProjectIdCollectionsRouteImport } from './routes/projects/$projectId/collections'
import { Route as ProjectsProjectIdSettingsIndexRouteImport } from './routes/projects/$projectId/settings/index'
import { Route as ProjectsProjectIdCollectionsIndexRouteImport } from './routes/projects/$projectId/collections/index'
import { Route as ProjectsProjectIdAssetsIndexRouteImport } from './routes/projects/$projectId/assets/index'
import { Route as ProjectsProjectIdSettingsVersionControlRouteImport } from './routes/projects/$projectId/settings/version-control'
import { Route as ProjectsProjectIdSettingsGeneralRouteImport } from './routes/projects/$projectId/settings/general'
import { Route as ProjectsProjectIdHistoryCommitHashRouteImport } from './routes/projects/$projectId/history/$commitHash'
import { Route as ProjectsProjectIdCollectionsCreateRouteImport } from './routes/projects/$projectId/collections/create'
import { Route as ProjectsProjectIdCollectionsCollectionIdRouteImport } from './routes/projects/$projectId/collections/$collectionId'
import { Route as ProjectsProjectIdCollectionsCollectionIdIndexRouteImport } from './routes/projects/$projectId/collections/$collectionId/index'
import { Route as ProjectsProjectIdCollectionsCollectionIdUpdateRouteImport } from './routes/projects/$projectId/collections/$collectionId/update'
import { Route as ProjectsProjectIdCollectionsCollectionIdCreateRouteImport } from './routes/projects/$projectId/collections/$collectionId/create'
import { Route as ProjectsProjectIdCollectionsCollectionIdEntryIdRouteImport } from './routes/projects/$projectId/collections/$collectionId/$entryId'
import { Route as ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRouteImport } from './routes/projects/$projectId/collections/$collectionId/$entryId/index'
import { Route as ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRouteImport } from './routes/projects/$projectId/collections/$collectionId/$entryId/update'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsRoute,
} as any)
const UserProfileRoute = UserProfileRouteImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsCreateRoute = ProjectsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ProjectsRoute,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/$projectId',
  path: '/$projectId',
  getParentRoute: () => ProjectsRoute,
} as any)
const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsProjectIdRoute,
} as any)
const ProjectsProjectIdSettingsRoute =
  ProjectsProjectIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)
const ProjectsProjectIdHistoryRoute =
  ProjectsProjectIdHistoryRouteImport.update({
    id: '/history',
    path: '/history',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)
const ProjectsProjectIdDashboardRoute =
  ProjectsProjectIdDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)
const ProjectsProjectIdCollectionsRoute =
  ProjectsProjectIdCollectionsRouteImport.update({
    id: '/collections',
    path: '/collections',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)
const ProjectsProjectIdSettingsIndexRoute =
  ProjectsProjectIdSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProjectsProjectIdSettingsRoute,
  } as any)
const ProjectsProjectIdCollectionsIndexRoute =
  ProjectsProjectIdCollectionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProjectsProjectIdCollectionsRoute,
  } as any)
const ProjectsProjectIdAssetsIndexRoute =
  ProjectsProjectIdAssetsIndexRouteImport.update({
    id: '/assets/',
    path: '/assets/',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)
const ProjectsProjectIdSettingsVersionControlRoute =
  ProjectsProjectIdSettingsVersionControlRouteImport.update({
    id: '/version-control',
    path: '/version-control',
    getParentRoute: () => ProjectsProjectIdSettingsRoute,
  } as any)
const ProjectsProjectIdSettingsGeneralRoute =
  ProjectsProjectIdSettingsGeneralRouteImport.update({
    id: '/general',
    path: '/general',
    getParentRoute: () => ProjectsProjectIdSettingsRoute,
  } as any)
const ProjectsProjectIdHistoryCommitHashRoute =
  ProjectsProjectIdHistoryCommitHashRouteImport.update({
    id: '/$commitHash',
    path: '/$commitHash',
    getParentRoute: () => ProjectsProjectIdHistoryRoute,
  } as any)
const ProjectsProjectIdCollectionsCreateRoute =
  ProjectsProjectIdCollectionsCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => ProjectsProjectIdCollectionsRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdRoute =
  ProjectsProjectIdCollectionsCollectionIdRouteImport.update({
    id: '/$collectionId',
    path: '/$collectionId',
    getParentRoute: () => ProjectsProjectIdCollectionsRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdIndexRoute =
  ProjectsProjectIdCollectionsCollectionIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdUpdateRoute =
  ProjectsProjectIdCollectionsCollectionIdUpdateRouteImport.update({
    id: '/update',
    path: '/update',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdCreateRoute =
  ProjectsProjectIdCollectionsCollectionIdCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdEntryIdRoute =
  ProjectsProjectIdCollectionsCollectionIdEntryIdRouteImport.update({
    id: '/$entryId',
    path: '/$entryId',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute =
  ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdEntryIdRoute,
  } as any)
const ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute =
  ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRouteImport.update({
    id: '/update',
    path: '/update',
    getParentRoute: () => ProjectsProjectIdCollectionsCollectionIdEntryIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/projects/create': typeof ProjectsCreateRoute
  '/user/profile': typeof UserProfileRoute
  '/projects/': typeof ProjectsIndexRoute
  '/user': typeof UserIndexRoute
  '/projects/$projectId/collections': typeof ProjectsProjectIdCollectionsRouteWithChildren
  '/projects/$projectId/dashboard': typeof ProjectsProjectIdDashboardRoute
  '/projects/$projectId/history': typeof ProjectsProjectIdHistoryRouteWithChildren
  '/projects/$projectId/settings': typeof ProjectsProjectIdSettingsRouteWithChildren
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/collections/$collectionId': typeof ProjectsProjectIdCollectionsCollectionIdRouteWithChildren
  '/projects/$projectId/collections/create': typeof ProjectsProjectIdCollectionsCreateRoute
  '/projects/$projectId/history/$commitHash': typeof ProjectsProjectIdHistoryCommitHashRoute
  '/projects/$projectId/settings/general': typeof ProjectsProjectIdSettingsGeneralRoute
  '/projects/$projectId/settings/version-control': typeof ProjectsProjectIdSettingsVersionControlRoute
  '/projects/$projectId/assets': typeof ProjectsProjectIdAssetsIndexRoute
  '/projects/$projectId/collections/': typeof ProjectsProjectIdCollectionsIndexRoute
  '/projects/$projectId/settings/': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/collections/$collectionId/$entryId': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRouteWithChildren
  '/projects/$projectId/collections/$collectionId/create': typeof ProjectsProjectIdCollectionsCollectionIdCreateRoute
  '/projects/$projectId/collections/$collectionId/update': typeof ProjectsProjectIdCollectionsCollectionIdUpdateRoute
  '/projects/$projectId/collections/$collectionId/': typeof ProjectsProjectIdCollectionsCollectionIdIndexRoute
  '/projects/$projectId/collections/$collectionId/$entryId/update': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute
  '/projects/$projectId/collections/$collectionId/$entryId/': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/user/profile': typeof UserProfileRoute
  '/projects': typeof ProjectsIndexRoute
  '/user': typeof UserIndexRoute
  '/projects/$projectId/dashboard': typeof ProjectsProjectIdDashboardRoute
  '/projects/$projectId/history': typeof ProjectsProjectIdHistoryRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/collections/create': typeof ProjectsProjectIdCollectionsCreateRoute
  '/projects/$projectId/history/$commitHash': typeof ProjectsProjectIdHistoryCommitHashRoute
  '/projects/$projectId/settings/general': typeof ProjectsProjectIdSettingsGeneralRoute
  '/projects/$projectId/settings/version-control': typeof ProjectsProjectIdSettingsVersionControlRoute
  '/projects/$projectId/assets': typeof ProjectsProjectIdAssetsIndexRoute
  '/projects/$projectId/collections': typeof ProjectsProjectIdCollectionsIndexRoute
  '/projects/$projectId/settings': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/collections/$collectionId/create': typeof ProjectsProjectIdCollectionsCollectionIdCreateRoute
  '/projects/$projectId/collections/$collectionId/update': typeof ProjectsProjectIdCollectionsCollectionIdUpdateRoute
  '/projects/$projectId/collections/$collectionId': typeof ProjectsProjectIdCollectionsCollectionIdIndexRoute
  '/projects/$projectId/collections/$collectionId/$entryId/update': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute
  '/projects/$projectId/collections/$collectionId/$entryId': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/projects/create': typeof ProjectsCreateRoute
  '/user/profile': typeof UserProfileRoute
  '/projects/': typeof ProjectsIndexRoute
  '/user/': typeof UserIndexRoute
  '/projects/$projectId/collections': typeof ProjectsProjectIdCollectionsRouteWithChildren
  '/projects/$projectId/dashboard': typeof ProjectsProjectIdDashboardRoute
  '/projects/$projectId/history': typeof ProjectsProjectIdHistoryRouteWithChildren
  '/projects/$projectId/settings': typeof ProjectsProjectIdSettingsRouteWithChildren
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/collections/$collectionId': typeof ProjectsProjectIdCollectionsCollectionIdRouteWithChildren
  '/projects/$projectId/collections/create': typeof ProjectsProjectIdCollectionsCreateRoute
  '/projects/$projectId/history/$commitHash': typeof ProjectsProjectIdHistoryCommitHashRoute
  '/projects/$projectId/settings/general': typeof ProjectsProjectIdSettingsGeneralRoute
  '/projects/$projectId/settings/version-control': typeof ProjectsProjectIdSettingsVersionControlRoute
  '/projects/$projectId/assets/': typeof ProjectsProjectIdAssetsIndexRoute
  '/projects/$projectId/collections/': typeof ProjectsProjectIdCollectionsIndexRoute
  '/projects/$projectId/settings/': typeof ProjectsProjectIdSettingsIndexRoute
  '/projects/$projectId/collections/$collectionId/$entryId': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRouteWithChildren
  '/projects/$projectId/collections/$collectionId/create': typeof ProjectsProjectIdCollectionsCollectionIdCreateRoute
  '/projects/$projectId/collections/$collectionId/update': typeof ProjectsProjectIdCollectionsCollectionIdUpdateRoute
  '/projects/$projectId/collections/$collectionId/': typeof ProjectsProjectIdCollectionsCollectionIdIndexRoute
  '/projects/$projectId/collections/$collectionId/$entryId/update': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute
  '/projects/$projectId/collections/$collectionId/$entryId/': typeof ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects'
    | '/projects/$projectId'
    | '/projects/create'
    | '/user/profile'
    | '/projects/'
    | '/user'
    | '/projects/$projectId/collections'
    | '/projects/$projectId/dashboard'
    | '/projects/$projectId/history'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/'
    | '/projects/$projectId/collections/$collectionId'
    | '/projects/$projectId/collections/create'
    | '/projects/$projectId/history/$commitHash'
    | '/projects/$projectId/settings/general'
    | '/projects/$projectId/settings/version-control'
    | '/projects/$projectId/assets'
    | '/projects/$projectId/collections/'
    | '/projects/$projectId/settings/'
    | '/projects/$projectId/collections/$collectionId/$entryId'
    | '/projects/$projectId/collections/$collectionId/create'
    | '/projects/$projectId/collections/$collectionId/update'
    | '/projects/$projectId/collections/$collectionId/'
    | '/projects/$projectId/collections/$collectionId/$entryId/update'
    | '/projects/$projectId/collections/$collectionId/$entryId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects/create'
    | '/user/profile'
    | '/projects'
    | '/user'
    | '/projects/$projectId/dashboard'
    | '/projects/$projectId/history'
    | '/projects/$projectId'
    | '/projects/$projectId/collections/create'
    | '/projects/$projectId/history/$commitHash'
    | '/projects/$projectId/settings/general'
    | '/projects/$projectId/settings/version-control'
    | '/projects/$projectId/assets'
    | '/projects/$projectId/collections'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/collections/$collectionId/create'
    | '/projects/$projectId/collections/$collectionId/update'
    | '/projects/$projectId/collections/$collectionId'
    | '/projects/$projectId/collections/$collectionId/$entryId/update'
    | '/projects/$projectId/collections/$collectionId/$entryId'
  id:
    | '__root__'
    | '/'
    | '/projects'
    | '/projects/$projectId'
    | '/projects/create'
    | '/user/profile'
    | '/projects/'
    | '/user/'
    | '/projects/$projectId/collections'
    | '/projects/$projectId/dashboard'
    | '/projects/$projectId/history'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/'
    | '/projects/$projectId/collections/$collectionId'
    | '/projects/$projectId/collections/create'
    | '/projects/$projectId/history/$commitHash'
    | '/projects/$projectId/settings/general'
    | '/projects/$projectId/settings/version-control'
    | '/projects/$projectId/assets/'
    | '/projects/$projectId/collections/'
    | '/projects/$projectId/settings/'
    | '/projects/$projectId/collections/$collectionId/$entryId'
    | '/projects/$projectId/collections/$collectionId/create'
    | '/projects/$projectId/collections/$collectionId/update'
    | '/projects/$projectId/collections/$collectionId/'
    | '/projects/$projectId/collections/$collectionId/$entryId/update'
    | '/projects/$projectId/collections/$collectionId/$entryId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsRoute: typeof ProjectsRouteWithChildren
  UserProfileRoute: typeof UserProfileRoute
  UserIndexRoute: typeof UserIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof ProjectsRoute
    }
    '/user/profile': {
      id: '/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof UserProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/create': {
      id: '/projects/create'
      path: '/create'
      fullPath: '/projects/create'
      preLoaderRoute: typeof ProjectsCreateRouteImport
      parentRoute: typeof ProjectsRoute
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof ProjectsRoute
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof ProjectsProjectIdIndexRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/settings': {
      id: '/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/projects/$projectId/settings'
      preLoaderRoute: typeof ProjectsProjectIdSettingsRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/history': {
      id: '/projects/$projectId/history'
      path: '/history'
      fullPath: '/projects/$projectId/history'
      preLoaderRoute: typeof ProjectsProjectIdHistoryRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/dashboard': {
      id: '/projects/$projectId/dashboard'
      path: '/dashboard'
      fullPath: '/projects/$projectId/dashboard'
      preLoaderRoute: typeof ProjectsProjectIdDashboardRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/collections': {
      id: '/projects/$projectId/collections'
      path: '/collections'
      fullPath: '/projects/$projectId/collections'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/settings/': {
      id: '/projects/$projectId/settings/'
      path: '/'
      fullPath: '/projects/$projectId/settings/'
      preLoaderRoute: typeof ProjectsProjectIdSettingsIndexRouteImport
      parentRoute: typeof ProjectsProjectIdSettingsRoute
    }
    '/projects/$projectId/collections/': {
      id: '/projects/$projectId/collections/'
      path: '/'
      fullPath: '/projects/$projectId/collections/'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsIndexRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsRoute
    }
    '/projects/$projectId/assets/': {
      id: '/projects/$projectId/assets/'
      path: '/assets'
      fullPath: '/projects/$projectId/assets'
      preLoaderRoute: typeof ProjectsProjectIdAssetsIndexRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
    '/projects/$projectId/settings/version-control': {
      id: '/projects/$projectId/settings/version-control'
      path: '/version-control'
      fullPath: '/projects/$projectId/settings/version-control'
      preLoaderRoute: typeof ProjectsProjectIdSettingsVersionControlRouteImport
      parentRoute: typeof ProjectsProjectIdSettingsRoute
    }
    '/projects/$projectId/settings/general': {
      id: '/projects/$projectId/settings/general'
      path: '/general'
      fullPath: '/projects/$projectId/settings/general'
      preLoaderRoute: typeof ProjectsProjectIdSettingsGeneralRouteImport
      parentRoute: typeof ProjectsProjectIdSettingsRoute
    }
    '/projects/$projectId/history/$commitHash': {
      id: '/projects/$projectId/history/$commitHash'
      path: '/$commitHash'
      fullPath: '/projects/$projectId/history/$commitHash'
      preLoaderRoute: typeof ProjectsProjectIdHistoryCommitHashRouteImport
      parentRoute: typeof ProjectsProjectIdHistoryRoute
    }
    '/projects/$projectId/collections/create': {
      id: '/projects/$projectId/collections/create'
      path: '/create'
      fullPath: '/projects/$projectId/collections/create'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCreateRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsRoute
    }
    '/projects/$projectId/collections/$collectionId': {
      id: '/projects/$projectId/collections/$collectionId'
      path: '/$collectionId'
      fullPath: '/projects/$projectId/collections/$collectionId'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsRoute
    }
    '/projects/$projectId/collections/$collectionId/': {
      id: '/projects/$projectId/collections/$collectionId/'
      path: '/'
      fullPath: '/projects/$projectId/collections/$collectionId/'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdIndexRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdRoute
    }
    '/projects/$projectId/collections/$collectionId/update': {
      id: '/projects/$projectId/collections/$collectionId/update'
      path: '/update'
      fullPath: '/projects/$projectId/collections/$collectionId/update'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdUpdateRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdRoute
    }
    '/projects/$projectId/collections/$collectionId/create': {
      id: '/projects/$projectId/collections/$collectionId/create'
      path: '/create'
      fullPath: '/projects/$projectId/collections/$collectionId/create'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdCreateRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdRoute
    }
    '/projects/$projectId/collections/$collectionId/$entryId': {
      id: '/projects/$projectId/collections/$collectionId/$entryId'
      path: '/$entryId'
      fullPath: '/projects/$projectId/collections/$collectionId/$entryId'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdRoute
    }
    '/projects/$projectId/collections/$collectionId/$entryId/': {
      id: '/projects/$projectId/collections/$collectionId/$entryId/'
      path: '/'
      fullPath: '/projects/$projectId/collections/$collectionId/$entryId/'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRoute
    }
    '/projects/$projectId/collections/$collectionId/$entryId/update': {
      id: '/projects/$projectId/collections/$collectionId/$entryId/update'
      path: '/update'
      fullPath: '/projects/$projectId/collections/$collectionId/$entryId/update'
      preLoaderRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRouteImport
      parentRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRoute
    }
  }
}

interface ProjectsProjectIdCollectionsCollectionIdEntryIdRouteChildren {
  ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute
  ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute
}

const ProjectsProjectIdCollectionsCollectionIdEntryIdRouteChildren: ProjectsProjectIdCollectionsCollectionIdEntryIdRouteChildren =
  {
    ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute:
      ProjectsProjectIdCollectionsCollectionIdEntryIdUpdateRoute,
    ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute:
      ProjectsProjectIdCollectionsCollectionIdEntryIdIndexRoute,
  }

const ProjectsProjectIdCollectionsCollectionIdEntryIdRouteWithChildren =
  ProjectsProjectIdCollectionsCollectionIdEntryIdRoute._addFileChildren(
    ProjectsProjectIdCollectionsCollectionIdEntryIdRouteChildren,
  )

interface ProjectsProjectIdCollectionsCollectionIdRouteChildren {
  ProjectsProjectIdCollectionsCollectionIdEntryIdRoute: typeof ProjectsProjectIdCollectionsCollectionIdEntryIdRouteWithChildren
  ProjectsProjectIdCollectionsCollectionIdCreateRoute: typeof ProjectsProjectIdCollectionsCollectionIdCreateRoute
  ProjectsProjectIdCollectionsCollectionIdUpdateRoute: typeof ProjectsProjectIdCollectionsCollectionIdUpdateRoute
  ProjectsProjectIdCollectionsCollectionIdIndexRoute: typeof ProjectsProjectIdCollectionsCollectionIdIndexRoute
}

const ProjectsProjectIdCollectionsCollectionIdRouteChildren: ProjectsProjectIdCollectionsCollectionIdRouteChildren =
  {
    ProjectsProjectIdCollectionsCollectionIdEntryIdRoute:
      ProjectsProjectIdCollectionsCollectionIdEntryIdRouteWithChildren,
    ProjectsProjectIdCollectionsCollectionIdCreateRoute:
      ProjectsProjectIdCollectionsCollectionIdCreateRoute,
    ProjectsProjectIdCollectionsCollectionIdUpdateRoute:
      ProjectsProjectIdCollectionsCollectionIdUpdateRoute,
    ProjectsProjectIdCollectionsCollectionIdIndexRoute:
      ProjectsProjectIdCollectionsCollectionIdIndexRoute,
  }

const ProjectsProjectIdCollectionsCollectionIdRouteWithChildren =
  ProjectsProjectIdCollectionsCollectionIdRoute._addFileChildren(
    ProjectsProjectIdCollectionsCollectionIdRouteChildren,
  )

interface ProjectsProjectIdCollectionsRouteChildren {
  ProjectsProjectIdCollectionsCollectionIdRoute: typeof ProjectsProjectIdCollectionsCollectionIdRouteWithChildren
  ProjectsProjectIdCollectionsCreateRoute: typeof ProjectsProjectIdCollectionsCreateRoute
  ProjectsProjectIdCollectionsIndexRoute: typeof ProjectsProjectIdCollectionsIndexRoute
}

const ProjectsProjectIdCollectionsRouteChildren: ProjectsProjectIdCollectionsRouteChildren =
  {
    ProjectsProjectIdCollectionsCollectionIdRoute:
      ProjectsProjectIdCollectionsCollectionIdRouteWithChildren,
    ProjectsProjectIdCollectionsCreateRoute:
      ProjectsProjectIdCollectionsCreateRoute,
    ProjectsProjectIdCollectionsIndexRoute:
      ProjectsProjectIdCollectionsIndexRoute,
  }

const ProjectsProjectIdCollectionsRouteWithChildren =
  ProjectsProjectIdCollectionsRoute._addFileChildren(
    ProjectsProjectIdCollectionsRouteChildren,
  )

interface ProjectsProjectIdHistoryRouteChildren {
  ProjectsProjectIdHistoryCommitHashRoute: typeof ProjectsProjectIdHistoryCommitHashRoute
}

const ProjectsProjectIdHistoryRouteChildren: ProjectsProjectIdHistoryRouteChildren =
  {
    ProjectsProjectIdHistoryCommitHashRoute:
      ProjectsProjectIdHistoryCommitHashRoute,
  }

const ProjectsProjectIdHistoryRouteWithChildren =
  ProjectsProjectIdHistoryRoute._addFileChildren(
    ProjectsProjectIdHistoryRouteChildren,
  )

interface ProjectsProjectIdSettingsRouteChildren {
  ProjectsProjectIdSettingsGeneralRoute: typeof ProjectsProjectIdSettingsGeneralRoute
  ProjectsProjectIdSettingsVersionControlRoute: typeof ProjectsProjectIdSettingsVersionControlRoute
  ProjectsProjectIdSettingsIndexRoute: typeof ProjectsProjectIdSettingsIndexRoute
}

const ProjectsProjectIdSettingsRouteChildren: ProjectsProjectIdSettingsRouteChildren =
  {
    ProjectsProjectIdSettingsGeneralRoute:
      ProjectsProjectIdSettingsGeneralRoute,
    ProjectsProjectIdSettingsVersionControlRoute:
      ProjectsProjectIdSettingsVersionControlRoute,
    ProjectsProjectIdSettingsIndexRoute: ProjectsProjectIdSettingsIndexRoute,
  }

const ProjectsProjectIdSettingsRouteWithChildren =
  ProjectsProjectIdSettingsRoute._addFileChildren(
    ProjectsProjectIdSettingsRouteChildren,
  )

interface ProjectsProjectIdRouteChildren {
  ProjectsProjectIdCollectionsRoute: typeof ProjectsProjectIdCollectionsRouteWithChildren
  ProjectsProjectIdDashboardRoute: typeof ProjectsProjectIdDashboardRoute
  ProjectsProjectIdHistoryRoute: typeof ProjectsProjectIdHistoryRouteWithChildren
  ProjectsProjectIdSettingsRoute: typeof ProjectsProjectIdSettingsRouteWithChildren
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  ProjectsProjectIdAssetsIndexRoute: typeof ProjectsProjectIdAssetsIndexRoute
}

const ProjectsProjectIdRouteChildren: ProjectsProjectIdRouteChildren = {
  ProjectsProjectIdCollectionsRoute:
    ProjectsProjectIdCollectionsRouteWithChildren,
  ProjectsProjectIdDashboardRoute: ProjectsProjectIdDashboardRoute,
  ProjectsProjectIdHistoryRoute: ProjectsProjectIdHistoryRouteWithChildren,
  ProjectsProjectIdSettingsRoute: ProjectsProjectIdSettingsRouteWithChildren,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  ProjectsProjectIdAssetsIndexRoute: ProjectsProjectIdAssetsIndexRoute,
}

const ProjectsProjectIdRouteWithChildren =
  ProjectsProjectIdRoute._addFileChildren(ProjectsProjectIdRouteChildren)

interface ProjectsRouteChildren {
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRouteWithChildren
  ProjectsCreateRoute: typeof ProjectsCreateRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectsProjectIdRoute: ProjectsProjectIdRouteWithChildren,
  ProjectsCreateRoute: ProjectsCreateRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsRoute: ProjectsRouteWithChildren,
  UserProfileRoute: UserProfileRoute,
  UserIndexRoute: UserIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
